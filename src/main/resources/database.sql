-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.bottoms
(
    bottom_id serial NOT NULL,
    bottom character varying COLLATE pg_catalog."default" NOT NULL,
    price integer NOT NULL,
    CONSTRAINT bottoms_pkey PRIMARY KEY (bottom_id)
    );

CREATE TABLE IF NOT EXISTS public.orderdetails
(
    order_id serial NOT NULL,
    bottom integer NOT NULL,
    topping integer NOT NULL,
    price integer NOT NULL,
    amount integer NOT NULL,
    CONSTRAINT orderdetails_pkey PRIMARY KEY (order_id)
    );

CREATE TABLE IF NOT EXISTS public.orders
(
    order_id serial NOT NULL,
    customer_id integer,
    date date,
    CONSTRAINT orders_pkey PRIMARY KEY (order_id)
    );

CREATE TABLE IF NOT EXISTS public.toppings
(
    topping_id serial NOT NULL,
    topping character varying COLLATE pg_catalog."default" NOT NULL,
    price integer NOT NULL,
    CONSTRAINT toppings_pkey PRIMARY KEY (topping_id)
    );

CREATE TABLE IF NOT EXISTS public.users
(
    user_id serial NOT NULL,
    email character varying COLLATE pg_catalog."default" NOT NULL,
    user_password character varying COLLATE pg_catalog."default" NOT NULL,
    balance integer,
    admin_role boolean,
    CONSTRAINT users_pkey PRIMARY KEY (user_id)
    );

ALTER TABLE IF EXISTS public.orderdetails
    ADD CONSTRAINT orderdetails_bottom_fkey FOREIGN KEY (bottom)
    REFERENCES public.bottoms (bottom_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.orderdetails
    ADD CONSTRAINT orderdetails_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS orderdetails_pkey
    ON public.orderdetails(order_id);


ALTER TABLE IF EXISTS public.orderdetails
    ADD CONSTRAINT orderdetails_topping_fkey FOREIGN KEY (topping)
    REFERENCES public.toppings (topping_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT orders_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
       ON DELETE NO ACTION
    NOT VALID;

END;